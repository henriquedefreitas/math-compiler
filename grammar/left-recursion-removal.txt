With left recursion:

<E> -> <E>+<T>
<E> -> <E>-<T>
<E> -> <T>
<T> -> <T>*<P>
<T> -> <T>/<P>
<T> -> <P>
<P> -> <P>^<F>
<P> -> exp[<F>]
<P> -> <F>
<F> -> (<E>)
<F> -> id

No left recursion:

<E>  -> <T><E'>
<E'> -> +<T><E'>
<E'> -> -<T><E'>
<E'> -> &
<T>  -> <P><T'>
<T'> -> *<P><T'>
<T'> -> /<P><T'>
<T'> -> &
<P>  -> <F><P'>
<P>  -> exp[<F>]<P'>
<P'> -> ^<F><P'>
<P'> -> &
<F>  -> (<E>)
<F>  -> id

